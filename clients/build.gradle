apply plugin: 'org.springframework.boot'

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
}
bootJar {
    baseName = 'webserver'
}


ext {
    swaggerOutputDir = file("${buildDir}/swagger")
}

dependencies {
    // Corda dependencies.
    compile "$corda_release_group:corda-rpc:$corda_release_version"

    // CorDapp dependencies.
    compile project(":contracts")
    compile project(":workflows")

    compile("org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"
    compile "org.apache.logging.log4j:log4j-web:${log4j_version}"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"
    
    //h2 console
    compile "com.h2database:h2:$h2_version"
    
    //swagger
    compile "io.springfox:springfox-swagger-ui:2.7.0"
    compile 'io.springfox.ui:springfox-swagger-ui-rfc6570:1.0.0'

    compile("io.springfox:springfox-swagger2:2.9.2") {
        exclude module: 'swagger-annotations'
        exclude module: 'swagger-models'
    }
    compile("io.swagger:swagger-annotations:1.5.21")
    compile("io.swagger:swagger-models:1.5.21") 

    //firebase dependency
    implementation 'com.google.firebase:firebase-admin:6.8.0'
}


springBoot {
    mainClassName = "twinkle.agriledger.webserver.ServerKt"
}

task runTemplateClient(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'twinkle.agriledger.ClientKt'
    args 'localhost:10006', 'user1', 'test'
}

task runTemplateServer(type: JavaExec, dependsOn: assemble) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'twinkle.agriledger.webserver.ServerKt'
    args '--server.port=10050', '--config.rpc.host=localhost', '--config.rpc.port=10006', '--config.rpc.username=user1', '--config.rpc.password=test'
}